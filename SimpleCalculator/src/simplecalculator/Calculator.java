/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package simplecalculator;

import javax.swing.UIManager;
import javax.swing.UIManager.LookAndFeelInfo;
import javax.swing.UnsupportedLookAndFeelException;

/**
 *
 * @author GADAPHY NK
 */
public class Calculator extends javax.swing.JFrame {

    /**
     * Creates new form Calculator
     */
    Double firstNum, secondNum, result;
    String operation, save = "";

    public Calculator() {
        initComponents();
        OFF.setSelected(true);
        disabled();

    }

    public static long fact(int n) {
        // function to calculate factorial to be called
        if (n <= 1) {
            return 1;
        } else {
            return n * fact(n - 1);
        }
    }

    public void disabled() {
        // function to disable all the buttons when off is pressed
        txtDisplay.setEnabled(false);
        btnSeven.setEnabled(false);
        btnFour.setEnabled(false);
        btnOne.setEnabled(false);
        btnTwo.setEnabled(false);
        btnFive.setEnabled(false);
        btnEight.setEnabled(false);
        btnSix.setEnabled(false);
        btnNine.setEnabled(false);
        btnThree.setEnabled(false);
        btnZero.setEnabled(false);
        opAdd.setEnabled(false);
        opMult.setEnabled(false);
        opDivision.setEnabled(false);
        opSubtract.setEnabled(false);
        Clear.setEnabled(false);
        Backsp.setEnabled(false);
        btnEquals.setEnabled(false);
        btnPoint.setEnabled(false);
        btnCase.setEnabled(false);
        opRead.setEnabled(false);
        opClean.setEnabled(false);
        opSave.setEnabled(false);
        funcInverse.setEnabled(false);
        funcSqrt.setEnabled(false);
        funcFact.setEnabled(false);
        opMod.setEnabled(false);
        funcCos.setEnabled(false);
        funcSin.setEnabled(false);
        funcTan.setEnabled(false);
        funcLog.setEnabled(false);
        funcBin.setEnabled(false);
        op2ndF.setEnabled(false);
    }

    public void enabled() {
        // function to enable all the buttons when off is pressed
        txtDisplay.setEnabled(true);
        btnSeven.setEnabled(true);
        btnFour.setEnabled(true);
        btnOne.setEnabled(true);
        btnTwo.setEnabled(true);
        btnFive.setEnabled(true);
        btnEight.setEnabled(true);
        btnSix.setEnabled(true);
        btnNine.setEnabled(true);
        btnThree.setEnabled(true);
        btnZero.setEnabled(true);
        opAdd.setEnabled(true);
        opMult.setEnabled(true);
        opDivision.setEnabled(true);
        opSubtract.setEnabled(true);
        Clear.setEnabled(true);
        Backsp.setEnabled(true);
        btnEquals.setEnabled(true);
        btnPoint.setEnabled(true);
        btnCase.setEnabled(true);
        opRead.setEnabled(true);
        opClean.setEnabled(true);
        opSave.setEnabled(true);
        funcInverse.setEnabled(true);
        funcSqrt.setEnabled(true);
        funcFact.setEnabled(true);
        opMod.setEnabled(true);
        funcCos.setEnabled(true);
        funcSin.setEnabled(true);
        funcTan.setEnabled(true);
        funcLog.setEnabled(true);
        funcBin.setEnabled(true);
        op2ndF.setEnabled(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        txtDisplay = new javax.swing.JTextField();
        btnSeven = new javax.swing.JButton();
        btnFour = new javax.swing.JButton();
        btnOne = new javax.swing.JButton();
        btnTwo = new javax.swing.JButton();
        btnFive = new javax.swing.JButton();
        btnEight = new javax.swing.JButton();
        btnSix = new javax.swing.JButton();
        btnNine = new javax.swing.JButton();
        btnThree = new javax.swing.JButton();
        btnZero = new javax.swing.JButton();
        opAdd = new javax.swing.JButton();
        opMult = new javax.swing.JButton();
        opDivision = new javax.swing.JButton();
        opSubtract = new javax.swing.JButton();
        Clear = new javax.swing.JButton();
        Backsp = new javax.swing.JButton();
        btnEquals = new javax.swing.JButton();
        btnPoint = new javax.swing.JButton();
        btnCase = new javax.swing.JButton();
        ON = new javax.swing.JRadioButton();
        OFF = new javax.swing.JRadioButton();
        opRead = new javax.swing.JButton();
        opClean = new javax.swing.JButton();
        opSave = new javax.swing.JButton();
        op2ndF = new javax.swing.JToggleButton();
        name = new javax.swing.JLabel();
        funcInverse = new javax.swing.JButton();
        funcSqrt = new javax.swing.JButton();
        funcFact = new javax.swing.JButton();
        opMod = new javax.swing.JButton();
        funcCos = new javax.swing.JButton();
        funcSin = new javax.swing.JButton();
        funcTan = new javax.swing.JButton();
        funcLog = new javax.swing.JButton();
        funcBin = new javax.swing.JButton();
        matricule = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("M Gadaphy Calculator");
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setPreferredSize(new java.awt.Dimension(300, 391));
        setResizable(false);

        jPanel1.setForeground(new java.awt.Color(102, 0, 102));
        jPanel1.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N

        txtDisplay.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtDisplay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDisplayActionPerformed(evt);
            }
        });

        btnSeven.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        btnSeven.setText("7");
        btnSeven.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSevenActionPerformed(evt);
            }
        });

        btnFour.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        btnFour.setText("4");
        btnFour.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFourActionPerformed(evt);
            }
        });

        btnOne.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        btnOne.setText("1");
        btnOne.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOneActionPerformed(evt);
            }
        });

        btnTwo.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        btnTwo.setText("2");
        btnTwo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTwoActionPerformed(evt);
            }
        });

        btnFive.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        btnFive.setText("5");
        btnFive.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFiveActionPerformed(evt);
            }
        });

        btnEight.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        btnEight.setText("8");
        btnEight.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEightActionPerformed(evt);
            }
        });

        btnSix.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        btnSix.setText("6");
        btnSix.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSixActionPerformed(evt);
            }
        });

        btnNine.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        btnNine.setText("9");
        btnNine.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNineActionPerformed(evt);
            }
        });

        btnThree.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        btnThree.setText("3");
        btnThree.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThreeActionPerformed(evt);
            }
        });

        btnZero.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        btnZero.setText("0");
        btnZero.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnZeroActionPerformed(evt);
            }
        });

        opAdd.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        opAdd.setText("+");
        opAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                opAddActionPerformed(evt);
            }
        });

        opMult.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        opMult.setText("X");
        opMult.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                opMultActionPerformed(evt);
            }
        });

        opDivision.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        opDivision.setText("/");
        opDivision.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                opDivisionActionPerformed(evt);
            }
        });

        opSubtract.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        opSubtract.setText("-");
        opSubtract.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                opSubtractActionPerformed(evt);
            }
        });

        Clear.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        Clear.setText("C");
        Clear.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                ClearStateChanged(evt);
            }
        });
        Clear.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                ClearFocusGained(evt);
            }
        });
        Clear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ClearActionPerformed(evt);
            }
        });

        Backsp.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        Backsp.setText("←");
        Backsp.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                BackspStateChanged(evt);
            }
        });
        Backsp.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                BackspFocusGained(evt);
            }
        });
        Backsp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BackspActionPerformed(evt);
            }
        });

        btnEquals.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        btnEquals.setText("=");
        btnEquals.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEqualsActionPerformed(evt);
            }
        });

        btnPoint.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        btnPoint.setText(".");
        btnPoint.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPointActionPerformed(evt);
            }
        });

        btnCase.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        btnCase.setText("±");
        btnCase.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCaseActionPerformed(evt);
            }
        });

        buttonGroup1.add(ON);
        ON.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        ON.setText("ON");
        ON.setToolTipText("");
        ON.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                ONStateChanged(evt);
            }
        });
        ON.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                ONFocusGained(evt);
            }
        });
        ON.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ONActionPerformed(evt);
            }
        });

        buttonGroup1.add(OFF);
        OFF.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        OFF.setText("OFF");
        OFF.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                OFFStateChanged(evt);
            }
        });
        OFF.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                OFFFocusGained(evt);
            }
        });
        OFF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OFFActionPerformed(evt);
            }
        });

        opRead.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        opRead.setText("RM");
        opRead.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                opReadFocusGained(evt);
            }
        });
        opRead.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                opReadActionPerformed(evt);
            }
        });

        opClean.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        opClean.setText("X-M");
        opClean.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                opCleanFocusGained(evt);
            }
        });
        opClean.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                opCleanActionPerformed(evt);
            }
        });

        opSave.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        opSave.setText("M+");
        opSave.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                opSaveFocusGained(evt);
            }
        });
        opSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                opSaveActionPerformed(evt);
            }
        });

        op2ndF.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        op2ndF.setText("2ndF");
        op2ndF.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                op2ndFItemStateChanged(evt);
            }
        });
        op2ndF.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                op2ndFStateChanged(evt);
            }
        });
        op2ndF.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                op2ndFFocusGained(evt);
            }
        });
        op2ndF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                op2ndFActionPerformed(evt);
            }
        });

        name.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        name.setForeground(new java.awt.Color(102, 0, 102));
        name.setText("MOHAMED GADAPHY NKWENKWAT");
        name.setToolTipText("Developer's name");
        name.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                nameFocusGained(evt);
            }
        });

        funcInverse.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        funcInverse.setText("1/X");
        funcInverse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                funcInverseActionPerformed(evt);
            }
        });

        funcSqrt.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        funcSqrt.setText("sqrt");
        funcSqrt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                funcSqrtActionPerformed(evt);
            }
        });

        funcFact.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        funcFact.setText("n!");
        funcFact.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                funcFactActionPerformed(evt);
            }
        });

        opMod.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        opMod.setText("Mod");
        opMod.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                opModActionPerformed(evt);
            }
        });

        funcCos.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        funcCos.setText("cos");
        funcCos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                funcCosActionPerformed(evt);
            }
        });

        funcSin.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        funcSin.setText("sin");
        funcSin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                funcSinActionPerformed(evt);
            }
        });

        funcTan.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        funcTan.setText("tan");
        funcTan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                funcTanActionPerformed(evt);
            }
        });

        funcLog.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        funcLog.setText("log");
        funcLog.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                funcLogActionPerformed(evt);
            }
        });

        funcBin.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        funcBin.setText("Bin");
        funcBin.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                funcBinFocusGained(evt);
            }
        });
        funcBin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                funcBinActionPerformed(evt);
            }
        });

        matricule.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        matricule.setForeground(new java.awt.Color(102, 0, 102));
        matricule.setText("UBa17P053");
        matricule.setToolTipText("Matricule Number");
        matricule.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                matriculeFocusGained(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(OFF)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(op2ndF)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(Clear)
                        .addGap(27, 27, 27)
                        .addComponent(Backsp))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnSeven)
                            .addComponent(btnFour)
                            .addComponent(btnOne))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnTwo)
                            .addComponent(btnFive)
                            .addComponent(btnEight))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnSix)
                            .addComponent(btnNine)
                            .addComponent(btnThree)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(funcInverse)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(funcSqrt)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(funcFact)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(opMod))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(funcSin)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(funcCos)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(funcTan)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(funcLog)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(funcBin))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btnZero)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnPoint)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnCase)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(opAdd)
                            .addComponent(opMult)
                            .addComponent(opDivision)
                            .addComponent(opSubtract))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnEquals)
                            .addComponent(opRead)
                            .addComponent(opClean)
                            .addComponent(opSave)
                            .addComponent(ON)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(name)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(49, 49, 49)
                                .addComponent(matricule)))
                        .addGap(30, 30, 30)))
                .addContainerGap(21, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(txtDisplay, javax.swing.GroupLayout.PREFERRED_SIZE, 256, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(txtDisplay, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ON)
                    .addComponent(OFF))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Clear)
                    .addComponent(Backsp)
                    .addComponent(op2ndF))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(funcSin)
                            .addComponent(funcCos)
                            .addComponent(funcTan)
                            .addComponent(funcLog)
                            .addComponent(funcBin))
                        .addGap(8, 8, 8)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(funcInverse)
                            .addComponent(funcSqrt)
                            .addComponent(funcFact)
                            .addComponent(opMod))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(btnSeven)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnFour)
                                .addGap(18, 18, 18)
                                .addComponent(btnOne)
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(btnZero)
                                    .addComponent(btnPoint)
                                    .addComponent(btnCase)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(btnEight)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnFive)
                                .addGap(18, 18, 18)
                                .addComponent(btnTwo))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(btnNine)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnSix)
                                .addGap(18, 18, 18)
                                .addComponent(btnThree))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(opDivision)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(opMult)
                                .addGap(18, 18, 18)
                                .addComponent(opAdd)
                                .addGap(18, 18, 18)
                                .addComponent(opSubtract))))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGap(34, 34, 34)
                            .addComponent(opRead)
                            .addGap(18, 18, 18)
                            .addComponent(opSave)
                            .addGap(18, 18, 18)
                            .addComponent(btnEquals))
                        .addComponent(opClean)))
                .addGap(33, 33, 33)
                .addComponent(name)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(matricule)
                .addGap(168, 168, 168))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 390, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 1, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void funcBinActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_funcBinActionPerformed
        String answer;
        int num = Integer.parseInt(txtDisplay.getText());

        answer = Integer.toBinaryString(num);// displaying with two decimal places
        txtDisplay.setText(answer);

    }//GEN-LAST:event_funcBinActionPerformed

    private void funcSinActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_funcSinActionPerformed
        // TODO add your handling code here:
        String answer;
        firstNum = Double.parseDouble(txtDisplay.getText());
        Double radValue = Math.toRadians(firstNum);//Converting to radians
        if (!op2ndF.isSelected()) {
            result = Math.asin(firstNum);
        } else {
            result = Math.sin(firstNum);
        }
        result = Math.sin(radValue);
        answer = String.format("%.2f", result);// displaying with two decimal places
        txtDisplay.setText(answer);
    }//GEN-LAST:event_funcSinActionPerformed

    private void funcCosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_funcCosActionPerformed
        String answer;
        firstNum = Double.parseDouble(txtDisplay.getText());
        Double radValue = Math.toRadians(firstNum);//Converting to radians
        if (!op2ndF.isSelected()) {
            result = Math.acos(firstNum);
        } else {
            result = Math.cos(firstNum);
        }

        answer = String.format("%.2f", result);// displaying with two decimal places
        txtDisplay.setText(answer);
    }//GEN-LAST:event_funcCosActionPerformed

    private void funcSqrtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_funcSqrtActionPerformed
        String answer;
        firstNum = Double.parseDouble(txtDisplay.getText());
        if (op2ndF.isSelected()) {
            result = Math.cbrt(firstNum);
        } else {
            result = Math.sqrt(firstNum);
        }

        answer = String.format("%.2f", result);// displaying with two decimal places
        txtDisplay.setText(answer);
    }//GEN-LAST:event_funcSqrtActionPerformed

    private void funcInverseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_funcInverseActionPerformed
        String answer;
        firstNum = Double.parseDouble(txtDisplay.getText());

        if (op2ndF.isSelected()) {
            result = (firstNum * firstNum);
        } else {
            result = (1 / firstNum);
        }

        answer = String.format("%.4f", result);// displaying with two decimal places
        txtDisplay.setText(answer);
    }//GEN-LAST:event_funcInverseActionPerformed

    private void OFFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OFFActionPerformed
        disabled();
    }//GEN-LAST:event_OFFActionPerformed

    private void ONActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ONActionPerformed
        enabled();
    }//GEN-LAST:event_ONActionPerformed

    private void btnPointActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPointActionPerformed
        // TODO add your handling code here:
        String dot = txtDisplay.getText() + btnPoint.getText();
        txtDisplay.setText(dot);
    }//GEN-LAST:event_btnPointActionPerformed

    private void btnEqualsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEqualsActionPerformed
        // TODO add your handling code here:
        String answer;
        secondNum = Double.parseDouble(txtDisplay.getText());
        if (operation == "+") {
            result = firstNum + secondNum;
            answer = String.format("%.2f", result);// displaying with two decimal places
            txtDisplay.setText(answer);
        } else if (operation == "-") {
            result = firstNum - secondNum;
            answer = String.format("%.2f", result);// displaying with two decimal places
            txtDisplay.setText(answer);
        } else if (operation == "*") {
            result = firstNum * secondNum;
            answer = String.format("%.2f", result);// displaying with two decimal places
            txtDisplay.setText(answer);
        } else if (operation == "/") {
            result = firstNum / secondNum;
            answer = String.format("%.2f", result);// displaying with two decimal places
            txtDisplay.setText(answer);
        } else if (operation == "%") {
            result = firstNum % secondNum;
            answer = String.format("%.0f", result);// displaying with two decimal places
            txtDisplay.setText(answer);
        }
    }//GEN-LAST:event_btnEqualsActionPerformed

    private void btnZeroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnZeroActionPerformed
        // TODO add your handling code here:
        String zero = txtDisplay.getText() + btnZero.getText();
        txtDisplay.setText(zero);
    }//GEN-LAST:event_btnZeroActionPerformed

    private void btnThreeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThreeActionPerformed
        // TODO add your handling code here:
        String three = txtDisplay.getText() + btnThree.getText();
        txtDisplay.setText(three);
    }//GEN-LAST:event_btnThreeActionPerformed

    private void btnNineActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNineActionPerformed
        // TODO add your handling code here:
        String nine = txtDisplay.getText() + btnNine.getText();
        txtDisplay.setText(nine);
    }//GEN-LAST:event_btnNineActionPerformed

    private void btnSixActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSixActionPerformed
        // TODO add your handling code here:
        String six = txtDisplay.getText() + btnSix.getText();
        txtDisplay.setText(six);
    }//GEN-LAST:event_btnSixActionPerformed

    private void btnEightActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEightActionPerformed
        // TODO add your handling code here:
        String eight = txtDisplay.getText() + btnEight.getText();
        txtDisplay.setText(eight);
    }//GEN-LAST:event_btnEightActionPerformed

    private void btnFiveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFiveActionPerformed
        // TODO add your handling code here:
        String five = txtDisplay.getText() + btnFive.getText();
        txtDisplay.setText(five);
    }//GEN-LAST:event_btnFiveActionPerformed

    private void btnTwoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTwoActionPerformed
        // TODO add your handling code here:
        String two = txtDisplay.getText() + btnTwo.getText();
        txtDisplay.setText(two);
    }//GEN-LAST:event_btnTwoActionPerformed

    private void btnOneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOneActionPerformed
        // TODO add your handling code here:
        String one = txtDisplay.getText() + btnOne.getText();
        txtDisplay.setText(one);
    }//GEN-LAST:event_btnOneActionPerformed

    private void btnFourActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFourActionPerformed
        // TODO add your handling code here:
        String four = txtDisplay.getText() + btnFour.getText();
        txtDisplay.setText(four);
    }//GEN-LAST:event_btnFourActionPerformed

    private void btnSevenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSevenActionPerformed
        // TODO add your handling code here:
        String seven = txtDisplay.getText() + btnSeven.getText();
        txtDisplay.setText(seven);
    }//GEN-LAST:event_btnSevenActionPerformed

    private void txtDisplayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDisplayActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDisplayActionPerformed

    private void opModActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_opModActionPerformed
        // TODO add your handling code here:
        firstNum = Double.parseDouble(txtDisplay.getText());
        operation = "%";
        txtDisplay.setText("");
    }//GEN-LAST:event_opModActionPerformed

    private void ClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ClearActionPerformed
        // TODO add your handling code here:
        txtDisplay.setText("");
    }//GEN-LAST:event_ClearActionPerformed

    private void BackspActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BackspActionPerformed
        // TODO add your handling code here:
        if (txtDisplay.getText().length() > 0) {//ensuring we have values before we start taking backspace
            StringBuilder strB = new StringBuilder(txtDisplay.getText());// I need string builder in order to benefit of the manipulatory effects of strings

            strB.deleteCharAt(txtDisplay.getText().length() - 1);// deleting the last character

            String Backspace = strB.toString();//finally getting the new stringss

            txtDisplay.setText(Backspace);
        }
    }//GEN-LAST:event_BackspActionPerformed

    private void opSubtractActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_opSubtractActionPerformed
        // TODO add your handling code here:
        firstNum = Double.parseDouble(txtDisplay.getText());
        operation = "-";
        txtDisplay.setText("");
    }//GEN-LAST:event_opSubtractActionPerformed

    private void opAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_opAddActionPerformed
        // TODO add your handling code here
        firstNum = Double.parseDouble(txtDisplay.getText());
        operation = "+";
        txtDisplay.setText("");
    }//GEN-LAST:event_opAddActionPerformed

    private void opMultActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_opMultActionPerformed
        // TODO add your handling code here:
        firstNum = Double.parseDouble(txtDisplay.getText());
        operation = "*";
        txtDisplay.setText("");
    }//GEN-LAST:event_opMultActionPerformed

    private void opDivisionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_opDivisionActionPerformed
        // TODO add your handling code here:
        firstNum = Double.parseDouble(txtDisplay.getText());
        operation = "/";
        txtDisplay.setText("");
    }//GEN-LAST:event_opDivisionActionPerformed

    private void btnCaseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCaseActionPerformed
        // TODO add your handling code here:
        Double opCase = Double.parseDouble(String.valueOf(txtDisplay.getText()));
        opCase = opCase * (-1);
        txtDisplay.setText(String.valueOf(opCase));
    }//GEN-LAST:event_btnCaseActionPerformed

    private void funcTanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_funcTanActionPerformed
        String answer;
        firstNum = Double.parseDouble(txtDisplay.getText());
        Double radValue = Math.toRadians(firstNum);//Converting to radians
        result = Math.tan(radValue);
        answer = String.format("%.2f", result);// displaying with two decimal places
        txtDisplay.setText(answer);
    }//GEN-LAST:event_funcTanActionPerformed

    private void funcLogActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_funcLogActionPerformed
        String answer;
        firstNum = Double.parseDouble(txtDisplay.getText());
        if (op2ndF.isSelected()) {
            result = Math.pow(10, firstNum);
        } else {
            result = Math.log10(firstNum);
        }

        answer = String.format("%.2f", result);// displaying with two decimal places
        txtDisplay.setText(answer);
    }//GEN-LAST:event_funcLogActionPerformed

    private void opSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_opSaveActionPerformed
        save = txtDisplay.getText();
        txtDisplay.setText("");
    }//GEN-LAST:event_opSaveActionPerformed

    private void funcFactActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_funcFactActionPerformed
        // TODO add your handling code here:
        String answer;
        int num = Integer.parseInt(txtDisplay.getText());

        answer = Long.toString(fact(num));// Calculating factorial
        txtDisplay.setText(answer);
    }//GEN-LAST:event_funcFactActionPerformed

    private void opReadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_opReadActionPerformed
        if (!save.isEmpty()) {
            txtDisplay.setText(save);
        } else {
            txtDisplay.setText("0");
        }
    }//GEN-LAST:event_opReadActionPerformed

    private void opCleanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_opCleanActionPerformed
        save = "";
    }//GEN-LAST:event_opCleanActionPerformed

    private void op2ndFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_op2ndFActionPerformed
        if (op2ndF.isSelected()) {
            funcInverse.setText("X^2");
            funcSqrt.setText("cbrt");
            funcCos.setText("acos");
            funcSin.setText("asin");
            funcTan.setText("atan");
            funcLog.setText("10^x");

        } else {
            funcInverse.setText("1/X");
            funcSqrt.setText("sqrt");
            funcCos.setText("cos");
            funcSin.setText("sin");
            funcTan.setText("tan");
            funcLog.setText("Log");
        }

    }//GEN-LAST:event_op2ndFActionPerformed

    private void OFFStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_OFFStateChanged
        if (!OFF.isSelected()) {
            OFF.setToolTipText("Click to turn off");
        } else if (OFF.isSelected()) {
            OFF.setToolTipText("Calculator is off");
        }
    }//GEN-LAST:event_OFFStateChanged

    private void op2ndFItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_op2ndFItemStateChanged
        // TODO add your handling code here:

    }//GEN-LAST:event_op2ndFItemStateChanged

    private void nameFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_nameFocusGained

    }//GEN-LAST:event_nameFocusGained

    private void matriculeFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_matriculeFocusGained

    }//GEN-LAST:event_matriculeFocusGained

    private void ONFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_ONFocusGained
        if (!ON.isSelected()) {
            ON.setToolTipText("Click to turn on");
        } else if (ON.isSelected()) {
            ON.setToolTipText("Calculator is on");
        }
    }//GEN-LAST:event_ONFocusGained

    private void funcBinFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_funcBinFocusGained
        funcBin.setToolTipText("Convert any value to base 2");
    }//GEN-LAST:event_funcBinFocusGained

    private void op2ndFFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_op2ndFFocusGained
        if (!op2ndF.isSelected()) {
            op2ndF.setToolTipText("Activate second function");
        } else if (!op2ndF.isSelected()) {
            op2ndF.setToolTipText("Deactivate second function");
        }
    }//GEN-LAST:event_op2ndFFocusGained

    private void opSaveFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_opSaveFocusGained
        opSave.setToolTipText("Save into memory");
    }//GEN-LAST:event_opSaveFocusGained

    private void opReadFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_opReadFocusGained
        if (save.isEmpty()) {
            opRead.setToolTipText("Memory is empty");
        } else {
            opRead.setToolTipText("Read from memory");
        }
    }//GEN-LAST:event_opReadFocusGained

    private void opCleanFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_opCleanFocusGained
        if (save.isEmpty()) {
            opRead.setToolTipText("No need clearing empty memory");
        } else {
            opRead.setToolTipText("Clear memory data");
        }
    }//GEN-LAST:event_opCleanFocusGained

    private void OFFFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_OFFFocusGained
        if (!OFF.isSelected()) {
            OFF.setToolTipText("Click to turn off");
        } else if (OFF.isSelected()) {
            OFF.setToolTipText("Calculator is off");
        }
    }//GEN-LAST:event_OFFFocusGained

    private void ONStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_ONStateChanged
        if (!ON.isSelected()) {
            ON.setToolTipText("Click to turn on");
        } else if (ON.isSelected()) {
            ON.setToolTipText("Calculator is on");
        }
    }//GEN-LAST:event_ONStateChanged

    private void op2ndFStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_op2ndFStateChanged
        if (!op2ndF.isSelected()) {
            op2ndF.setToolTipText("Activate second function");
        } else if (op2ndF.isSelected()) {
            op2ndF.setToolTipText("Deactivate second function");
        }
    }//GEN-LAST:event_op2ndFStateChanged

    private void ClearFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_ClearFocusGained
        Clear.setToolTipText("Clear the display");
    }//GEN-LAST:event_ClearFocusGained

    private void ClearStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_ClearStateChanged
        Clear.setToolTipText("Clear the display");
    }//GEN-LAST:event_ClearStateChanged

    private void BackspStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_BackspStateChanged
        if (txtDisplay.getText().isEmpty()) {
            Backsp.setToolTipText("No value available");
        } else {
            Backsp.setToolTipText("Delete the right most value");
        }
    }//GEN-LAST:event_BackspStateChanged

    private void BackspFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_BackspFocusGained
        if (txtDisplay.getText().isEmpty()) {
            Backsp.setToolTipText("No value available");
        } else {
            Backsp.setToolTipText("Delete the right most value");
        }
    }//GEN-LAST:event_BackspFocusGained

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) throws ClassNotFoundException, InstantiationException, IllegalAccessException, UnsupportedLookAndFeelException {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Calculator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Calculator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Calculator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Calculator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        UIManager.setLookAndFeel("com.jtattoo.plaf.aluminium.AluminiumLookAndFeel");
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Calculator().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Backsp;
    private javax.swing.JButton Clear;
    private javax.swing.JRadioButton OFF;
    private javax.swing.JRadioButton ON;
    private javax.swing.JButton btnCase;
    private javax.swing.JButton btnEight;
    private javax.swing.JButton btnEquals;
    private javax.swing.JButton btnFive;
    private javax.swing.JButton btnFour;
    private javax.swing.JButton btnNine;
    private javax.swing.JButton btnOne;
    private javax.swing.JButton btnPoint;
    private javax.swing.JButton btnSeven;
    private javax.swing.JButton btnSix;
    private javax.swing.JButton btnThree;
    private javax.swing.JButton btnTwo;
    private javax.swing.JButton btnZero;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton funcBin;
    private javax.swing.JButton funcCos;
    private javax.swing.JButton funcFact;
    private javax.swing.JButton funcInverse;
    private javax.swing.JButton funcLog;
    private javax.swing.JButton funcSin;
    private javax.swing.JButton funcSqrt;
    private javax.swing.JButton funcTan;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel matricule;
    private javax.swing.JLabel name;
    private javax.swing.JToggleButton op2ndF;
    private javax.swing.JButton opAdd;
    private javax.swing.JButton opClean;
    private javax.swing.JButton opDivision;
    private javax.swing.JButton opMod;
    private javax.swing.JButton opMult;
    private javax.swing.JButton opRead;
    private javax.swing.JButton opSave;
    private javax.swing.JButton opSubtract;
    private javax.swing.JTextField txtDisplay;
    // End of variables declaration//GEN-END:variables
}
